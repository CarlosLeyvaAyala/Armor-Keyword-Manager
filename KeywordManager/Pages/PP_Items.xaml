<UserControl x:Class="KeywordManager.Pages.PP_Items"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:System="clr-namespace:System;assembly=System.Runtime"
             xmlns:c="clr-namespace:GUI.Commands;assembly=GUI"
             xmlns:ctx="clr-namespace:GUI.PageContexts;assembly=GUI"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:KeywordManager.Pages"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:uc="clr-namespace:KeywordManager.UserControls"
             d:DesignHeight="800"
             d:DesignWidth="1200"
             Loaded="OnLoaded"
             mc:Ignorable="d">

  <UserControl.DataContext>
    <ctx:ItemsPageCtx x:Name="ctx"
                      EnabledControlsConditions="CanEnableControls"
                      NavControl="{x:Reference lstNavItems}" />
  </UserControl.DataContext>

  <UserControl.CommandBindings>
    <CommandBinding CanExecute="OnCanDelKeyword"
                    Command="c:ItemCmds.DelKeyword"
                    Executed="OnDelKeyword" />

    <CommandBinding CanExecute="OnCanCreateUnboundOutfit"
                    Command="c:ItemCmds.CreateUnboundOutfit"
                    Executed="OnCreateUnboundOutfit" />

    <CommandBinding CanExecute="OnCanSetImage"
                    Command="c:ItemCmds.SetImage"
                    Executed="OnSetImage" />

    <CommandBinding CanExecute="OnCanNamesToClipboard"
                    Command="c:ItemCmds.NamesToClipboard"
                    Executed="OnNamesToClipboard" />

    <CommandBinding CanExecute="OnCanUIdsToClipboard"
                    Command="c:ItemCmds.UIdsToClipboard"
                    Executed="OnUIdsToClipboard" />

    <CommandBinding CanExecute="OnCanNamesAndUIdToClipboard"
                    Command="c:ItemCmds.NamesAndUIdToClipboard"
                    Executed="OnNamesAndUIdToClipboard" />

    <CommandBinding CanExecute="OnCanGenxEditKeywords"
                    Command="c:ItemCmds.GenxEditKeywords"
                    Executed="OnGenxEditKeywords" />
  </UserControl.CommandBindings>

  <Grid x:Name="cntMain">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="9*" />
      <ColumnDefinition Width="{DynamicResource GridSepHorizontalWide}" />
      <ColumnDefinition Width="8*" />
      <ColumnDefinition Width="{DynamicResource GridSepHorizontalWide}" />
      <ColumnDefinition Width="8*" />
    </Grid.ColumnDefinitions>

    <!--  NAVIGATOR  -->
    <GroupBox md:ColorZoneAssist.Mode="PrimaryMid"
              Header="Navigate"
              Style="{StaticResource MaterialDesignCardGroupBox}">
      <DockPanel>
        <!--  FILTER  -->
        <Grid DockPanel.Dock="Top">
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
          </Grid.ColumnDefinitions>

          <!--  FILTER TEXTBOX  -->
          <Label Content="_N"
                 DockPanel.Dock="Top"
                 Style="{StaticResource lblInvis}"
                 Target="{x:Reference edtFilter}" />
          <TextBox x:Name="edtFilter"
                   Margin="{DynamicResource MgGrpContent}"
                   md:HintAssist.Hint="Search..."
                   md:TextFieldAssist.HasClearButton="True"
                   md:TextFieldAssist.HasLeadingIcon="True"
                   md:TextFieldAssist.LeadingIcon="Search"
                   KeyDown="OnFilterKeyDown"
                   ToolTip="Searches by name, esp or Editor ID (EDID)">
            <TextBox.Text>
              <Binding Mode="TwoWay"
                       Path="NameFilter.Text"
                       UpdateSourceTrigger="PropertyChanged">
                <Binding.ValidationRules>
                  <v:RegexRule xmlns:v="clr-namespace:DMLib_WPF.Validators;assembly=DMLib-Fs-WPF"
                               x:Name="regexRule"
                               ValidatesOnTargetUpdated="True" />
                </Binding.ValidationRules>
              </Binding>
            </TextBox.Text>
          </TextBox>

          <!--  USE REGEX  -->
          <ToggleButton x:Name="tbFilterByRegex"
                        Grid.Column="1"
                        Click="OnFilterNameByRegexClick"
                        Content="{md:PackIcon Kind=Regex}"
                        IsChecked="{Binding Source={StaticResource appSettings}, Path=Default.itemFilterNameByRegex}"
                        Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}"
                        ToolTip="Use regular expression" />

          <!--  CLEAR TAGS  -->
          <Button Click="OnClearTags"
                  Content="{md:PackIcon Kind=TagOff}"
                  Style="{StaticResource clearTagsInName}" />
        </Grid>

        <ListBox x:Name="lstNavItems"
                 Margin="{DynamicResource MarginStd}"
                 HorizontalContentAlignment="Stretch"
                 d:ItemsSource="{d:SampleData ItemCount=5}"
                 ItemsSource="{Binding Nav}"
                 KeyDown="OnLstNavItemsKeyDown"
                 SelectionChanged="LstNavItems_SelectionChanged"
                 SelectionMode="Extended">
          <ListBox.ItemTemplate>
            <DataTemplate>
              <Grid Margin="0,5"
                    ToolTipService.BetweenShowDelay="0"
                    ToolTipService.HorizontalOffset="30"
                    ToolTipService.InitialShowDelay="10"
                    ToolTipService.Placement="Right">

                <!--  IMAGE TOOLTIP  -->
                <Grid.ToolTip>
                  <Grid>
                    <TextBlock Text="This item has no image and does not belong&#x0a;to any outfits with preview images" Visibility="{Binding TooltipVisible, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                    <ItemsControl ItemsSource="{Binding Imgs, IsAsync=true}">
                      <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                          <WrapPanel />
                        </ItemsPanelTemplate>
                      </ItemsControl.ItemsPanel>
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <!--  IMAGES  -->
                          <uc:ImgPreviewCaptioned DataContext="{Binding}" />
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </Grid>
                </Grid.ToolTip>

                <Grid.RowDefinitions>
                  <RowDefinition Height="auto" />
                  <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.ColumnSpan="2" Orientation="Horizontal">
                  <StackPanel.Resources>
                    <Style TargetType="md:PackIcon">
                      <Setter Property="Margin" Value="0,0,5,0" />
                    </Style>
                  </StackPanel.Resources>

                  <md:PackIcon Foreground="{StaticResource clbRbActive}"
                               Kind="Image"
                               Visibility="{Binding HasImage, Converter={StaticResource BooleanToVisibilityConverter}}" />
                  <md:PackIcon Foreground="{StaticResource clbRbActive}"
                               Kind="TshirtCrew"
                               Visibility="{Binding BelongsToOutfitWithImg, Converter={StaticResource BooleanToVisibilityConverter}}" />

                  <!--  NAME  -->
                  <TextBlock Grid.Column="1"
                             Margin="0,0,5,0"
                             Text="{Binding Name}">
                    <TextBlock.Style>
                      <Style BasedOn="{StaticResource NavTxtMain}" TargetType="TextBlock">
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding BelongsToOutfit}" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkBrush}" />
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </TextBlock.Style>
                  </TextBlock>

                  <md:PackIcon Foreground="{StaticResource clbRbInactive}"
                               Kind="TagOutline"
                               Opacity="0.25"
                               Visibility="{Binding HasTags, Converter={StaticResource BooleanToVisibilityConverter}}" />
                  <md:PackIcon Foreground="{StaticResource clbRbInactive}"
                               Kind="KeyOutline"
                               Opacity="0.25"
                               Visibility="{Binding HasKeywords, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </StackPanel>

                <!--  ESP  -->
                <TextBlock Grid.Row="1"
                           Grid.Column="0"
                           VerticalAlignment="Bottom"
                           Style="{StaticResource NavTxtD2}"
                           Text="{Binding Esp}" />

                <!--  EDID  -->
                <TextBlock Grid.Row="1"
                           Grid.Column="1"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Bottom"
                           Style="{StaticResource NavTxtD1}"
                           Text="{Binding EDID}" />
              </Grid>
            </DataTemplate>
          </ListBox.ItemTemplate>
          <ListBox.ContextMenu>
            <ContextMenu>
              <MenuItem Command="c:ItemCmds.SetImage" Header="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}" />
              <Separator />

              <MenuItem Command="c:ItemCmds.CreateUnboundOutfit" Header="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}" />
              <Separator />

              <MenuItem Command="c:ItemCmds.NamesToClipboard">
                <MenuItem.Style>
                  <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="MenuItem">
                    <Setter Property="Header" Value="Copy _name" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsNavMultipleSelected}" Value="true">
                        <Setter Property="Header" Value="Copy _names" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </MenuItem.Style>
              </MenuItem>

              <MenuItem Command="c:ItemCmds.UIdsToClipboard">
                <MenuItem.Style>
                  <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="MenuItem">
                    <Setter Property="Header" Value="Copy _Unique ID" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsNavMultipleSelected}" Value="true">
                        <Setter Property="Header" Value="Copy _Unique IDs" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </MenuItem.Style>
              </MenuItem>

              <MenuItem Command="c:ItemCmds.NamesAndUIdToClipboard">
                <MenuItem.Style>
                  <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="MenuItem">
                    <Setter Property="Header" Value="Copy name _and Unique ID" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsNavMultipleSelected}" Value="true">
                        <Setter Property="Header" Value="Copy names _and Unique IDs" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </MenuItem.Style>
              </MenuItem>

              <Separator />

              <MenuItem Command="c:ItemCmds.GenxEditKeywords"
                        Header="Generate xEdit script for keywords"
                        ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}" />
            </ContextMenu>
          </ListBox.ContextMenu>
        </ListBox>
      </DockPanel>
    </GroupBox>

    <!--  ITEM DATA  -->
    <GroupBox x:Name="grpItemData"
              Grid.Column="2"
              md:ColorZoneAssist.Mode="SecondaryMid"
              Header="Item data">
      <GroupBox.Style>
        <Style BasedOn="{StaticResource MaterialDesignCardGroupBox}" TargetType="{x:Type GroupBox}">
          <Style.Triggers>
            <DataTrigger Binding="{Binding SelectedIndex, ElementName=lstNavItems}" Value="-1">
              <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </GroupBox.Style>
      <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="{StaticResource GridSepVerticalNarrow}" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="{StaticResource GridSepVerticalNarrow}" />
            <RowDefinition Height="auto" />
          </Grid.RowDefinitions>

          <!--  ITEM TYPE  -->
          <ComboBox Margin="{StaticResource MarginStd}"
                    VerticalAlignment="Top"
                    SelectedIndex="0"
                    Visibility="Collapsed">
            <ComboBoxItem Content="Armor" />
            <ComboBoxItem Content="﻿Weapon" />
            <ComboBoxItem Content="Ammo" />
          </ComboBox>

          <StackPanel x:Name="pnlItemType"
                      Margin="4"
                      HorizontalAlignment="Center"
                      Orientation="Horizontal">
            <StackPanel.Resources>
              <Style x:Key="activeImg" TargetType="Image">
                <Setter Property="Width" Value="20" />
                <Setter Property="Visibility" Value="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}, Converter={StaticResource BooleanToVisibilityConverter}}" />
              </Style>
              <Style x:Key="inactiveImg" TargetType="Image">
                <Setter Property="Visibility" Value="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                <Setter Property="Width" Value="20" />
              </Style>
            </StackPanel.Resources>
            <RadioButton x:Name="rbArmor"
                         Margin="4"
                         Click="OnChangeItemType"
                         GroupName="ItemType"
                         IsChecked="{Binding Path=ItemType[0]}"
                         Style="{StaticResource MaterialDesignTabRadioButton}"
                         Tag="0">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="auto" />
                  <RowDefinition Height="6" />
                  <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Image Source="{StaticResource svgArmorActive}" Style="{StaticResource activeImg}" />
                <Image Source="{StaticResource svgArmorInactive}" Style="{StaticResource inactiveImg}" />
                <TextBlock Grid.Row="2" Text="Armor" />
              </Grid>
            </RadioButton>
            <RadioButton x:Name="rbWeapon"
                         Margin="4"
                         Click="OnChangeItemType"
                         GroupName="ItemType"
                         IsChecked="{Binding Path=ItemType[1]}"
                         Style="{StaticResource MaterialDesignTabRadioButton}"
                         Tag="1">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="auto" />
                  <RowDefinition Height="6" />
                  <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Image Source="{StaticResource svgWeaponActive}" Style="{StaticResource activeImg}" />
                <Image Source="{StaticResource svgWeaponInactive}" Style="{StaticResource inactiveImg}" />
                <TextBlock Grid.Row="2" Text="Weapon" />
              </Grid>
            </RadioButton>
            <RadioButton x:Name="rbAmmo"
                         Margin="4"
                         Click="OnChangeItemType"
                         GroupName="ItemType"
                         IsChecked="{Binding Path=ItemType[2]}"
                         Style="{StaticResource MaterialDesignTabRadioButton}"
                         Tag="2">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="auto" />
                  <RowDefinition Height="6" />
                  <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Image Source="{StaticResource svgAmmoActive}" Style="{StaticResource activeImg}" />
                <Image Source="{StaticResource svgAmmoInactive}" Style="{StaticResource inactiveImg}" />
                <TextBlock Grid.Row="2" Text="Ammo" />
              </Grid>
            </RadioButton>
          </StackPanel>

          <!--  ITEM KEYWORDS  -->
          <GroupBox Grid.Row="2"
                    md:ColorZoneAssist.Mode="PrimaryLight"
                    BorderThickness="0"
                    Header="Keywords"
                    KeyDown="LstItemKeywords_KeyDown">
            <ListBox x:Name="lstItemKeywords"
                     MinHeight="30"
                     d:ItemsSource="{d:SampleData ItemCount=5}"
                     ItemsSource="{Binding SelectedItem.Keywords}"
                     SelectionMode="Extended">
              <ListBox.ContextMenu>
                <ContextMenu>
                  <MenuItem Command="EditingCommands.Delete" />
                </ContextMenu>
              </ListBox.ContextMenu>
              <ListBox.ItemTemplate>
                <DataTemplate>
                  <TextBlock xmlns:gk="clr-namespace:GUI.PageContexts.Keywords;assembly=GUI"
                             d:DataContext="{d:DesignInstance Type=gk:NavListItem}"
                             Cursor="Help"
                             Foreground="{Binding Color, Converter={StaticResource IntToKeywordColor}}"
                             Text="{Binding Name}"
                             ToolTipService.InitialShowDelay="100">
                    <TextBlock.ToolTip>
                      <StackPanel Orientation="Horizontal">
                        <Image Grid.Column="0"
                               Width="50"
                               Height="50"
                               Margin="0,0,10,0"
                               HorizontalAlignment="Left"
                               Cursor="Help"
                               Source="{Binding Img}"
                               Stretch="UniformToFill" />
                        <TextBlock VerticalAlignment="Center" Text="{Binding Description}" />
                      </StackPanel>
                    </TextBlock.ToolTip>
                  </TextBlock>
                </DataTemplate>
              </ListBox.ItemTemplate>
            </ListBox>
          </GroupBox>

          <!--  TAGS  -->
          <GroupBox Grid.Row="4"
                    md:ColorZoneAssist.Mode="PrimaryLight"
                    BorderThickness="0"
                    Header="Tags">
            <StackPanel>
              <uc:TagViewer x:Name="lstItemTags"
                            MaxHeight="150"
                            IsDeletable="True"
                            ItemsSource="{Binding SelectedItem.Tags}"
                            TagDeleteClick="OnDeleteTag" />

              <Label Content="_T"
                     Style="{StaticResource lblInvis}"
                     Target="{x:Reference cbItemTags}" />
              <ComboBox x:Name="cbItemTags"
                        Margin="{StaticResource MgTopNaarrow}"
                        IsEditable="True"
                        ItemsSource="{Binding SelectedItem.MissingTags}"
                        KeyDown="OnCbTagsAdd" />
            </StackPanel>
          </GroupBox>
        </Grid>
      </ScrollViewer>
    </GroupBox>

    <!--  KEYWORDS  -->
    <GroupBox Grid.Column="4"
              md:ColorZoneAssist.Mode="PrimaryMid"
              Header="Keywords"
              Style="{StaticResource MaterialDesignCardGroupBox}">
      <uc:KeywordManagerUC x:Name="keywordMgr"
                           Margin="{StaticResource MarginStd}"
                           KeywordChange="OnKeywordChanged"
                           KeywordSelect="OnKeywordsSet" />
    </GroupBox>
  </Grid>
</UserControl>
