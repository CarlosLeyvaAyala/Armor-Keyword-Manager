<UserControl
  x:Class="KeywordManager.Pages.PP_Outfits"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:behaviors="clr-namespace:WPFTextBoxAutoComplete;assembly=WPFTextBoxAutoComplete"
  xmlns:bhv="http://cla.me/wpf/xaml/controls"
  xmlns:c="clr-namespace:GUI.Commands;assembly=GUI"
  xmlns:ctx="clr-namespace:GUI.PageContexts;assembly=GUI"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:guiobjs="clr-namespace:Data.UI.Outfit;assembly=Data"
  xmlns:local="clr-namespace:KeywordManager.Pages"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:sys="clr-namespace:System;assembly=System.Runtime"
  xmlns:tb="clr-namespace:DMLib_WPF.Controls.TextBox.Behaviors;assembly=DMLib-Fs-WPF"
  xmlns:uc="clr-namespace:KeywordManager.UserControls"
  d:DesignHeight="800"
  d:DesignWidth="1200"
  Loaded="OnLoaded"
  mc:Ignorable="d">
  <UserControl.Resources>
    <sys:Double x:Key="rowHeightPieces">120</sys:Double>
    <sys:String x:Key="nonDistributableMessage" xml:space="preserve">This outfit does not belong to any plugin.
It can not be exported to SPID.</sys:String>
  </UserControl.Resources>

  <UserControl.DataContext>
    <ctx:OutfitPageCtx
      x:Name="ctx"
      EnabledControlsConditions="CanEnableControls"
      NavControl="{x:Reference lstNav}" />
  </UserControl.DataContext>

  <UserControl.CommandBindings>
    <CommandBinding
      CanExecute="OnCanDel"
      Command="c:OutfitCmds.Del"
      Executed="OnDel" />
  </UserControl.CommandBindings>

  <Grid x:Name="cntMain" IsEnabled="{Binding CanItemBeSelected}">
    <Grid.RowDefinitions>
      <RowDefinition Height="4*" />
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="6*" />
      <ColumnDefinition Width="{StaticResource GridSepHorizontalWide}" />
      <ColumnDefinition Width="7*" />
      <ColumnDefinition Width="{StaticResource GridSepHorizontalWide}" />
      <ColumnDefinition Width="4*" />
    </Grid.ColumnDefinitions>

    <!--  NAVIGATOR  -->
    <GroupBox
      Grid.RowSpan="3"
      Header="Navigate"
      Style="{StaticResource MaterialDesignCardGroupBox}">
      <DockPanel>
        <ListBox
          x:Name="lstNav"
          HorizontalContentAlignment="Stretch"
          d:ItemsSource="{d:SampleData ItemCount=10}"
          ItemsSource="{Binding Nav}"
          KeyDown="OnLstNavKeyDown"
          SelectionChanged="OnNavSelectionChanged"
          SelectionMode="Extended">
          <ListBox.ItemTemplate>
            <DataTemplate>
              <Grid d:DataContext="{d:DesignInstance Type=guiobjs:NavListItem}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="auto" />
                  <ColumnDefinition Width="10" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                  <Style x:Key="preview" TargetType="Image">
                    <Setter Property="Width" Value="{DynamicResource ImgListPreviewSize}" />
                    <Setter Property="Height" Value="{DynamicResource ImgListPreviewSize}" />
                    <Setter Property="ToolTipService.HorizontalOffset" Value="130" />
                    <Setter Property="ToolTipService.InitialShowDelay" Value="50" />
                    <Setter Property="ToolTipService.Placement" Value="Right" />
                  </Style>
                </Grid.Resources>

                <!--  ACTUAL IMAGE  -->
                <Image
                  Source="{Binding Img, Mode=OneWay, Converter={StaticResource StringToImgConverter}}"
                  Style="{StaticResource preview}"
                  Visibility="{Binding HasImg, Converter={StaticResource BooleanToVisibilityConverter}}">
                  <Image.ToolTip>
                    <Image Height="400" Source="{Binding Img, Mode=OneWay, Converter={StaticResource StringToImgConverter}}" />
                  </Image.ToolTip>
                </Image>

                <!--  MISSING IMAGE  -->
                <Image
                  Source="{StaticResource svgNoImage}"
                  Style="{StaticResource preview}"
                  Visibility="{Binding HasImg, Converter={StaticResource InverseBoolToVisConverter}}">
                  <Image.ToolTip>
                    <Image Height="400" Source="{StaticResource svgNoImage}" />
                  </Image.ToolTip>
                </Image>

                <!--  TEXT  -->
                <StackPanel Grid.Column="2" VerticalAlignment="Center">
                  <!--  NAME  -->
                  <TextBlock
                    Style="{StaticResource NavTxtMain}"
                    Text="{Binding Name, FallbackValue=Name}"
                    ToolTip="Name will not be used outside this app"
                    Visibility="{Binding HasMissingPieces, Converter={StaticResource InverseBoolToVisConverter}}" />

                  <!--  NAME WITH MISSING PIECES  -->
                  <StackPanel
                    Orientation="Horizontal"
                    ToolTipService.InitialShowDelay="50"
                    Visibility="{Binding HasMissingPieces, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel.ToolTip>
                      <StackPanel>
                        <TextBlock Text="This outfit has pieces not found in this database:" />
                        <ItemsControl Margin="15,4,0,8" ItemsSource="{Binding MissingPieces}" />
                        <TextBlock FontWeight="Bold" Text="Get them from xEdit." />
                      </StackPanel>
                    </StackPanel.ToolTip>
                    <!--  WARNING ICON  -->
                    <md:PackIcon Foreground="{StaticResource ColorWarning}" Kind="Warning" />

                    <!--  NAME  -->
                    <TextBlock
                      Margin="5,0"
                      FontWeight="Black"
                      Foreground="{StaticResource ColorWarning}"
                      Style="{StaticResource NavTxtMain}"
                      Text="{Binding Name, FallbackValue=Missing pieces name}" />
                  </StackPanel>

                  <!--  EDID  -->
                  <TextBlock
                    Margin="{StaticResource MgTopNaaarrow}"
                    Style="{StaticResource NavTxtD1}"
                    Text="{Binding EDID, FallbackValue=EDID}"
                    ToolTip="Editor ID (EDID)" />
                  <TextBlock Text="{Binding Esp, FallbackValue=Esp}">
                    <TextBlock.Style>
                      <Style BasedOn="{StaticResource NavTxtD1}" TargetType="TextBlock">
                        <Setter Property="Margin" Value="{StaticResource MgTopNaaarrow}" />
                        <Setter Property="ToolTip" Value="Plugin" />
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsUnbound}" Value="True">
                            <Setter Property="Foreground" Value="Red" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="ToolTip" Value="{DynamicResource nonDistributableMessage}" />
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </TextBlock.Style>
                  </TextBlock>
                </StackPanel>
              </Grid>
            </DataTemplate>
          </ListBox.ItemTemplate>
          <ListBox.ContextMenu>
            <ContextMenu>
              <MenuItem
                Click="OnRename"
                Header="_Rename"
                IsEnabled="{Binding IsNavSingleSelected}" />
              <MenuItem
                Click="OnBatchRename"
                Header="Batch _rename"
                IsEnabled="{Binding IsNavMultipleSelected}" />
              <Separator />
              <MenuItem Click="OnSetImgClick" Header="Set _image" />
              <Separator />
              <MenuItem Command="c:OutfitCmds.Del" Header="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}" />
            </ContextMenu>
          </ListBox.ContextMenu>
        </ListBox>
      </DockPanel>
    </GroupBox>

    <!--  DISTRIBUTION  -->
    <GroupBox
      Grid.Column="2"
      md:ColorZoneAssist.Mode="SecondaryMid"
      Header="SPID rules"
      IsEnabled="{Binding SelectedItem.IsDistributable}"
      Style="{StaticResource MaterialDesignCardGroupBox}">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
          <RowDefinition Height="{StaticResource GridSepVerticalNarrow}" />
          <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <!--  RULE LIST  -->
        <ListBox Visibility="{Binding SelectedItem.IsDistributable, Converter={StaticResource BooleanToVisibilityConverter}}" />

        <!--  UNBOUND OUTFIT WARNING  -->
        <StackPanel
          Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.7}"
          VerticalAlignment="Center"
          Visibility="{Binding SelectedItem.IsDistributable, Converter={StaticResource InverseBooleanToVisibilityConverter}}">

          <md:PackIcon
            Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}"
            Height="{Binding Width, RelativeSource={RelativeSource Self}}"
            HorizontalAlignment="Stretch"
            Foreground="{StaticResource ColorWarning}"
            Kind="Warning" />

          <TextBlock
            Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
            Text="{DynamicResource nonDistributableMessage}"
            TextAlignment="Center"
            TextWrapping="WrapWithOverflow" />
        </StackPanel>

        <!--  RULE CONTROLS  -->
        <StackPanel Grid.Row="2" Visibility="{Binding SelectedItem.IsDistributable, Converter={StaticResource BooleanToVisibilityConverter}}">
          <StackPanel.Resources>
            <Style BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" TargetType="TextBox">
              <Setter Property="ToolTipService.HorizontalOffset" Value="-150" />
              <Setter Property="ToolTipService.Placement" Value="Right" />
              <Setter Property="ToolTipService.InitialShowDelay" Value="50" />
            </Style>
            <Style BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}" TargetType="ComboBox">
              <Setter Property="IsEditable" Value="True" />
              <Setter Property="Margin" Value="{StaticResource MgTopNaarrow}" />
            </Style>
            <Style TargetType="ItemsControl">
              <Setter Property="Margin" Value="15,2,0,7" />
            </Style>
            <Style x:Key="operatorList" TargetType="StackPanel">
              <Setter Property="Margin" Value="15,2,0,7" />
            </Style>
            <Style x:Key="tooltipSymbols" TargetType="Run">
              <Setter Property="FontFamily" Value="Consolas" />
              <Setter Property="FontSize" Value="14" />
              <Setter Property="FontWeight" Value="Normal" />
              <Setter Property="Foreground" Value="{StaticResource SecondaryHueLightBrush}" />
            </Style>
          </StackPanel.Resources>

          <!--  STRING FILTERS  -->
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <!--  FORMID WARNING  -->
            <md:PackIcon
              Width="30"
              Height="30"
              Margin="0,0,10,0"
              VerticalAlignment="Bottom"
              Cursor="Help"
              Foreground="{StaticResource ColorWarning}"
              Kind="Warning"
              ToolTipService.InitialShowDelay="50"
              Visibility="{Binding Text, Converter={StaticResource SpidFormIdWarning}, ElementName=edtStringsFilter}">
              <md:PackIcon.ToolTip>
                <StackPanel MaxWidth="210">
                  <TextBlock Style="{StaticResource MaterialDesignSubtitle2TextBlock}" Text="SPID001" />
                  <TextBlock
                    Margin="{StaticResource MgTopNaaarrow}"
                    Text="FormIDs are not banned by this app, but they are still discouraged."
                    TextWrapping="WrapWithOverflow" />
                  <TextBlock
                    Margin="{StaticResource MgTopNarrow}"
                    Text="Read the help file to find more about it."
                    TextWrapping="WrapWithOverflow" />
                </StackPanel>
              </md:PackIcon.ToolTip>
            </md:PackIcon>

            <!--  EDIT  -->
            <TextBox
              x:Name="edtStringsFilter"
              Grid.Column="1"
              behaviors:AutoCompleteBehavior.AutoCompleteIndicator="@"
              behaviors:AutoCompleteBehavior.AutoCompleteItemsSource="{Binding SPIDStrings}"
              behaviors:AutoCompleteBehavior.AutoCompleteStringComparison="InvariantCultureIgnoreCase"
              md:HintAssist.Hint="Strings filter"
              md:TextFieldAssist.HasLeadingIcon="True"
              md:TextFieldAssist.LeadingIcon="HumanCapacityDecrease">
              <TextBox.ToolTip>
                <StackPanel>
                  <TextBlock Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Text="Quick reference" />
                  <TextBlock Margin="{StaticResource MgTopNaaarrow}">
                    <Run>Imported data to be autocompleted when writing</Run>
                    <Run Style="{StaticResource tooltipSymbols}">
                      ,+-
                    </Run>
                    <Run>:</Run>
                  </TextBlock>
                  <ItemsControl>
                    <sys:String>&#8226; Keywords</sys:String>
                    <sys:String>&#8226; NPCs</sys:String>
                  </ItemsControl>
                  <TextBlock Text="Advanced matching functions allowed (sorted by priority):" />
                  <StackPanel Style="{StaticResource operatorList}">
                    <TextBlock>
                      <Run Style="{StaticResource tooltipSymbols}">(+)</Run>
                      <Run>requirement</Run>
                    </TextBlock>
                    <TextBlock>
                      <Run Style="{StaticResource tooltipSymbols}">(-)</Run>
                      <Run>exclusion</Run>
                    </TextBlock>
                    <TextBlock>
                      <Run Style="{StaticResource tooltipSymbols}">(*)</Run>
                      <Run>wildcard</Run>
                    </TextBlock>
                  </StackPanel>
                </StackPanel>
              </TextBox.ToolTip>
            </TextBox>
            <Button
              Grid.Column="2"
              Margin="0,2,0,3"
              Click="BtnStringsFilterClick"
              Content="{md:PackIcon Kind=HumanCapacityDecrease}"
              Style="{StaticResource MaterialDesignOutlinedButton}" />
          </Grid>

          <!--  FORM FILTERS  -->
          <Grid Margin="{StaticResource MgTopXWide}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBox
              x:Name="edtFormsFilter"
              md:HintAssist.Hint="Forms filter"
              md:TextFieldAssist.HasLeadingIcon="True"
              md:TextFieldAssist.LeadingIcon="TextBoxOutline"
              tb:Autocomplete.Indicator=",+-"
              tb:Autocomplete.ItemsSource="{Binding SPIDStrings}"
              tb:Autocomplete.StringComparison="CurrentCultureIgnoreCase"
              KeyDown="OnAutocompleteTbKeyDown">
              <TextBox.ToolTip>
                <StackPanel>
                  <TextBlock Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Text="Quick reference" />
                  <TextBlock Margin="{StaticResource MgTopNaaarrow}">
                    <Run>Imported data to be autocompleted when writing</Run>
                    <Run Style="{StaticResource tooltipSymbols}">
                      ,+-
                    </Run>
                    <Run>:</Run>
                  </TextBlock>
                  <ItemsControl>
                    <sys:String>&#8226; Race</sys:String>
                    <sys:String>&#8226; Class</sys:String>
                    <sys:String>&#8226; Faction</sys:String>
                    <sys:String>&#8226; Combat Style</sys:String>
                    <sys:String>&#8226; Cell NPC</sys:String>
                    <sys:String>&#8226; Location</sys:String>
                    <sys:String>&#8226; Voice Type</sys:String>
                    <sys:String>&#8226; FormID List</sys:String>
                    <sys:String>&#8226; Spell</sys:String>
                  </ItemsControl>
                  <TextBlock Text="Advanced matching functions allowed (sorted by priority):" />
                  <StackPanel Style="{StaticResource operatorList}">
                    <TextBlock>
                      <Run Style="{StaticResource tooltipSymbols}">(+)</Run>
                      <Run>requirement</Run>
                    </TextBlock>
                    <TextBlock>
                      <Run Style="{StaticResource tooltipSymbols}">(-)</Run>
                      <Run>exclusion</Run>
                    </TextBlock>
                  </StackPanel>
                </StackPanel>
              </TextBox.ToolTip>
              <TextBox.Text>
                <Binding
                  Mode="OneWay"
                  Path="Text"
                  RelativeSource="{RelativeSource Self}"
                  UpdateSourceTrigger="PropertyChanged">
                  <Binding.ValidationRules>
                    <v:SpidFormWildcardRule xmlns:v="clr-namespace:GUI.Validators;assembly=GUI" ValidatesOnTargetUpdated="True" />
                  </Binding.ValidationRules>
                </Binding>
              </TextBox.Text>
            </TextBox>
            <Button
              Grid.Column="1"
              Margin="0,2,0,3"
              Content="{md:PackIcon Kind=TextBoxOutline}"
              Style="{StaticResource MaterialDesignOutlinedButton}" />
          </Grid>


          <Grid Margin="{StaticResource MgTopXXWide}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="auto" />
              <ColumnDefinition Width="{StaticResource GridSepHorizontalWiide}" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <!--  LEVEL  -->
            <TextBox
              VerticalAlignment="Center"
              md:HintAssist.Hint="Level"
              md:HintAssist.IsFloating="True" />
            <Button
              Grid.Column="1"
              VerticalAlignment="Center"
              Content="{md:PackIcon Kind=HumanHandsup}"
              DockPanel.Dock="Right"
              Style="{StaticResource MaterialDesignOutlinedButton}" />

            <!--  TRAITS  -->
            <TextBox
              Grid.Column="3"
              VerticalAlignment="Center"
              md:HintAssist.Hint="Traits"
              md:HintAssist.IsFloating="True" />
            <Button
              Grid.Column="4"
              VerticalAlignment="Center"
              Content="{md:PackIcon Kind=AccountGroup}"
              Style="{StaticResource MaterialDesignOutlinedButton}" />
          </Grid>

          <DockPanel Margin="{StaticResource MgTopXXWide}">
            <TextBlock Margin="0,0,20,0" Text="Chance" />

            <!--  CHANCE  -->
            <Slider
              Grid.Column="3"
              Maximum="100"
              Minimum="1"
              Style="{StaticResource MaterialDesignDiscreteHorizontalSlider}"
              Value="100" />
          </DockPanel>

          <Button Margin="{StaticResource MgTopXWide}" Content="_Add rule">
            <Button.Style>
              <Style BasedOn="{StaticResource MaterialDesignRaisedSecondaryButton}" TargetType="Button">
                <Style.Triggers>
                  <!--  DISABLE IF FIELDS ARE EMPTY  -->
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding Path=Text, ElementName=edtStringsFilter}" Value="" />
                      <Condition Binding="{Binding Path=Text, ElementName=edtFormsFilter}" Value="" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="False" />
                  </MultiDataTrigger>

                  <!--  DISABLE ON VALIDATION ERROR  -->
                  <DataTrigger Binding="{Binding ElementName=edtFormsFilter, Path=(Validation.HasError)}" Value="true">
                    <Setter Property="IsEnabled" Value="False" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Button.Style>
          </Button>
        </StackPanel>
      </Grid>
    </GroupBox>

    <!--  OUTFIT DATA  -->
    <GroupBox
      Grid.Column="4"
      md:ColorZoneAssist.Mode="PrimaryMid"
      Header="Outfit data"
      Style="{StaticResource MaterialDesignCardGroupBox}">

      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="10*" />
          <RowDefinition Height="{StaticResource GridSepVertical}" />
          <RowDefinition Height="5*" />
        </Grid.RowDefinitions>

        <!--  TAGS  -->
        <GroupBox
          Grid.Row="2"
          md:ColorZoneAssist.Mode="PrimaryLight"
          BorderThickness="0"
          Header="Tags">
          <uc:TagViewer x:Name="lstItemTags" ItemsSource="{Binding SelectedItem.Tags}" />
        </GroupBox>

        <!--  ARMOR PIECES  -->
        <GroupBox
          Margin="{StaticResource MgTopNaarrow}"
          md:ColorZoneAssist.Mode="PrimaryLight"
          BorderThickness="0"
          Header="Armor pieces">
          <ListBox d:ItemsSource="{d:SampleData ItemCount=10}" ItemsSource="{Binding SelectedItem.ArmorPieces}">
            <ListBox.ItemTemplate>
              <DataTemplate>
                <StackPanel
                  d:DataContext="{d:DesignInstance guiobjs:ArmorPiece}"
                  ToolTip="{Binding FullName}"
                  ToolTipService.InitialShowDelay="10">

                  <!--  SHORT NAME  -->
                  <TextBlock Text="{Binding ShortName, FallbackValue=Name}">
                    <TextBlock.Style>
                      <Style BasedOn="{StaticResource MaterialDesignTextBlock}" TargetType="TextBlock">
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsInDB}" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                            <Setter Property="ToolTip" Value="This item has not been added to this database" />
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </TextBlock.Style>
                  </TextBlock>

                  <!--  LONG NAME  -->
                  <TextBlock
                    Style="{StaticResource NavTxtD1}"
                    Text="{Binding FullName}"
                    Visibility="{Binding NameWasShortened, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </StackPanel>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </GroupBox>

        <!--  IMAGE  -->
        <!--
        <GroupBox
          Grid.Row="2"
          Grid.ColumnSpan="3"
          md:ColorZoneAssist.Mode="PrimaryLight"
          BorderThickness="0"
          DataContext="{Binding SelectedItem}"
          Header="Image"
          Visibility="Collapsed">
          <uc:SelectImagePrompt
            Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}"
            d:DataContext="{d:DesignInstance Type=guiobjs:NavSelectedItem}"
            Button.Click="OnSetImgClick"
            Button.Drop="OnSetImgDrop"
            Image="{Binding Img, Converter={StaticResource StringToImgConverter}}">
            <uc:SelectImagePrompt.Style>
              <Style TargetType="uc:SelectImagePrompt">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding HasImg}" Value="False">
                    <Setter Property="IsPromptVisible" Value="True" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding HasImg}" Value="True">
                    <Setter Property="IsPromptVisible" Value="False" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </uc:SelectImagePrompt.Style>
          </uc:SelectImagePrompt>
        </GroupBox>-->
      </Grid>
    </GroupBox>
  </Grid>
</UserControl>
